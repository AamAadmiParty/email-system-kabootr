<?php
/**
 * @file
 * Simplenews user list, edit form for adding simplenews category
 *
 * @ingroup simplenews userlist
 */

/**
 * Implements hook_form_alter.
 */
function simplenews_user_list_form_alter(&$form, &$form_state, $form_id) {
  // Add users filters in creation of Newsletter category
  if ($form_id == 'simplenews_admin_category_form') {
    include 'includes/simplenews_user_list.admin.inc';
    $form['user_filter'] = array(
        '#type' => 'fieldset',
        '#title' => t('Create Subscription List'),
        '#collapsible' => FALSE
    );
    
    // This tid repersent the term in Newsletter category vocab,
    // In editing newsletter category, tid repersent the Newsletter Category
    $newsletter_tid = NULL;
    if (isset($form['tid']['#value'])) {
      $newsletter_tid = $form['tid']['#value'];
    }
    // Create user filter based on User account field
    // The id's of form user filter has been set to it's user field ID.
    $users_filters = simplenews_user_list_create_user_filters($newsletter_tid);
    if ($users_filters != NULL) {
      foreach ($users_filters as $f_key => $f_value) {
        $form['user_filter']['kabootr_user_filter_' . $f_key] = $f_value;
      }
      // Create user list based on selected user filters
      $form['#submit'][] = 'simplenews_user_list_admin_category_form_submit';
    }
  }
}

/**
 * Provide information about our custom placeholder/token.
 *
 * @see httx://api.drupal.org/api/drupal/modules--system--system.api.php/function/hook_token_info/7
 * @see httx://api.lullabot.com/token_example_token_info/7
 * @return array An associative array of available tokens and token types.
 *         Implements hook_token_info().
 */
function simplenews_user_list_token_info() {
  $info['tokens']['simplenews']['master_newsletter'] = array(
      'name' => t('master_newsletter'),
      'description' => t('Give master newsletter.')
  );
  return $info;
}
function simplenews_user_list_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  if ($type == 'simplenews' && ! empty($data['simplenews'])) {
    foreach ($tokens as $name => $original) {
      switch($name) {
        case 'master_newsletter' :
          $master_newsletter_tid = variable_get('master_simplenews_category', '');
          $replacements[$original] = $master_newsletter_tid;
          break;
      }
    }
  }
  return $replacements;
}